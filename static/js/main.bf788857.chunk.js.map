{"version":3,"sources":["components/CourseSelector/Course.js","components/CourseSelector/SemSelector.js","components/CourseSelector/SearchBar.js","components/CourseSelector/CourseSelector.js","components/CourseSelector/SelectedCourses.js","components/Timetable/Day.js","components/Timetable/Timetable.js","App.js","reportWebVitals.js","index.js"],"names":["Course","id","selectedCourses","setSelectedCourses","sem","useState","hovering","setHovering","addCourse","find","c","res","slice","push","isSelected","course","boxCheck","setBoxCheck","removeCourse","filter","className","onMouseEnter","event","onMouseLeave","type","onChange","checked","SemSelector","setSem","onClick","SearchBar","searchTerm","setSearchTerm","placeholder","target","value","CourseSelector","hoverCourse","setHoverCourse","maxEntries","searchRes","Object","keys","courses","sort","courseCode","i","length","fitSearch","map","withCheckBox","SelectedCourses","ind","TimeSlot","coursesAtTimeSlot","Day","fromTime","toTime","day","times","style","display","Timetable","dayTimeString","JSON","stringify","Array","fill","dt","parse","timetable","daysToTime","days","forEach","d","t","startTime","endTime","writeTime","generateTimetable","DayTime","timeArray","toString","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf788857.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Course = ({id, selectedCourses, setSelectedCourses, sem}) => {\r\n    const [hovering, setHovering] = useState(false);\r\n    const addCourse = (selectedCourses) => {\r\n        if (typeof selectedCourses[sem].find(c => c === id) !== 'undefined') return selectedCourses;\r\n        let res = selectedCourses.slice();\r\n        res[sem].push(id);\r\n        return res;\r\n    }\r\n    const isSelected = () => {\r\n        return typeof selectedCourses[sem].find(course => id === course) !== 'undefined';\r\n    }\r\n    const [boxCheck, setBoxCheck] = useState(isSelected());\r\n    const removeCourse = (selectedCourses) => {\r\n        let res = selectedCourses.slice();\r\n        res[sem] = res[sem].filter(c => c !== id);\r\n        return res;\r\n    }\r\n    const handleMouseEnter = event => {\r\n        if (!isSelected()) {\r\n            setSelectedCourses(addCourse);\r\n            setHovering(true);\r\n        }\r\n    }\r\n    const handleMouseLeave = event => {\r\n        if (hovering) {\r\n            setSelectedCourses(removeCourse);\r\n            setHovering(false);\r\n        }\r\n    }\r\n    const tickCourse = event => {\r\n        if (!boxCheck) {\r\n            setBoxCheck(true);\r\n            setHovering(false);\r\n        }\r\n        else {\r\n            setSelectedCourses(removeCourse);\r\n            setBoxCheck(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Course\" onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n            <label className=\"CourseName\">\r\n                {id}\r\n                {<input\r\n                    type=\"checkbox\"\r\n                    className=\"CourseCheckbox\"\r\n                    id={id}\r\n                    onChange={tickCourse}\r\n                    checked={boxCheck}\r\n                />}\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Course","const SemSelector = ({setSem}) => {\r\n    return (\r\n        <div className=\"SemSelector\">\r\n            <div className=\"Sem\" onClick={() => setSem(0)}>First Semester</div>\r\n            <div className=\"Sem\" onClick={() => setSem(1)}>Second Semester</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SemSelector","const SearchBar = ({searchTerm, setSearchTerm}) => {\r\n    const handleInput = event => {\r\n        setSearchTerm(event.target.value)\r\n    }\r\n    return (\r\n        <input\r\n            type=\"text\" \r\n            className=\"SearchBar\" \r\n            placeholder=\"Search\"\r\n            onChange={handleInput}\r\n        >\r\n        </input>\r\n    );\r\n}\r\n\r\nexport default SearchBar","import { useState } from 'react';\r\nimport Course from './Course'\r\nimport SemSelector from './SemSelector';\r\nimport SearchBar from './SearchBar'\r\nimport courses from '../courses.json'\r\n\r\nconst CourseSelector = ({hoverCourse, setHoverCourse, sem, setSem, selectedCourses, setSelectedCourses}) => {\r\n    const maxEntries = 1000;\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const fitSearch = (searchTerm, courseCode) => {\r\n        for (let i = 0; i < searchTerm.length; i++) {\r\n            if (courseCode[i] !== searchTerm[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n    const searchRes = Object.keys(courses[sem]).sort().filter(id => fitSearch(searchTerm, id))\r\n    return (\r\n        <div className=\"CourseSelector\">\r\n            <SearchBar searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n            <SemSelector setSem={setSem} />\r\n            <div className=\"ShowingTopResults\">{searchRes.length > maxEntries ? \"Showing top \" + maxEntries  + \" results.\" : \"Showing all \" + searchRes.length + \" results.\"}</div>\r\n            <div className=\"Courses\">\r\n                {\r\n                    searchRes.slice(0,maxEntries).map(id => \r\n                        <Course\r\n                            key={id} \r\n                            sem={sem} \r\n                            id={id} \r\n                            selectedCourses={selectedCourses} \r\n                            setSelectedCourses={setSelectedCourses}\r\n                            withCheckBox={true}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseSelector","import Course from './Course'\r\n\r\nconst SelectedCourses = ({sem, selectedCourses, setSelectedCourses}) => {\r\n    return (\r\n        <div className=\"SelectedCourses\">\r\n            <div>{sem === 0 ? \"First Semester\" : sem === 1 ? \"Second Semester\" : \"Summer Semester\"}</div>\r\n            <div>Selected Courses:</div>\r\n            <div className=\"Courses\">\r\n                {selectedCourses[sem].map((id, ind) => <Course key={id + ind} id={id} sem={sem} selectedCourses={selectedCourses} setSelectedCourses={setSelectedCourses} withCheckBox={false}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectedCourses","const TimeSlot = ({coursesAtTimeSlot}) => {\r\n    return (\r\n        <div className={coursesAtTimeSlot.length === 0 ? \"TimeSlotEmpty\" : coursesAtTimeSlot.length === 1 ? \"TimeSlotFilled\" : \"TimeSlotConflicted\"}>\r\n            {coursesAtTimeSlot.map((c, ind) => <div key={c + ind} className=\"TimeSlotCourse\">{c}</div>)}\r\n        </div>\r\n    );\r\n}\r\nconst Day = ({fromTime, toTime, day, times}) => {\r\n    return (\r\n        <div className=\"Day\">\r\n            <div className=\"DayTitle\">{day}</div>\r\n            {\r\n                times.map((coursesAtTimeSlot, ind) => (ind >= fromTime && ind < toTime) ? <TimeSlot key={ind} coursesAtTimeSlot={coursesAtTimeSlot} /> : <div key={ind} style={{display: \"hidden\"}}></div>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Day","import Day from './Day'\r\nimport courses from '../courses.json'\r\n\r\nconst Timetable = ({fromTime, toTime, sem, selectedCourses}) => {\r\n    const dayTimeString = JSON.stringify(new Array(24).fill([]));\r\n    const dt = () => JSON.parse(dayTimeString);\r\n    const dayTitles = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\r\n    const generateTimetable = () => {\r\n        let timetable = {'MON':dt(), 'TUE':dt(), 'WED':dt(), 'THU':dt(), 'FRI':dt(), 'SAT':dt(), 'SUN':dt()};\r\n        const daysToTime = (days, id) => {\r\n            const writeTime = (d, times, id) => {\r\n                times.forEach(t => {\r\n                    for (let i = t.startTime; i !== t.endTime; ++i) {\r\n                        timetable[d][i].push(id);\r\n                    }\r\n                })\r\n            }\r\n            Object.keys(days).forEach(d => writeTime(d, days[d], id));\r\n        }\r\n        // console.log(selectedCourses);\r\n        // console.log(sem);\r\n        selectedCourses[sem].forEach(c => {\r\n            daysToTime(courses[sem][c].days, c)\r\n        });\r\n        return timetable;\r\n    }\r\n    const timetable = generateTimetable();\r\n    const DayTime = () => {\r\n        // console.log(fromTime);\r\n        const timeArray = Array(toTime - fromTime).fill(fromTime).map((t, ind) => t + ind);\r\n        // console.log(JSON.stringify(timeArray));\r\n        return (\r\n            <div className=\"Day\">\r\n                <div className=\"DayTitle\">-</div>\r\n                {timeArray.map(t => <div key={t} className=\"TimeSlotEmpty\">{t.toString() + \":30-\" + (t+1).toString() + \":20\"}</div>)}\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"Timetable\">\r\n            <DayTime />\r\n            {dayTitles.map(d => <Day key={d} fromTime={fromTime} toTime={toTime} day={d} times={timetable[d]} />)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timetable","import { useState } from 'react';\nimport CourseSelector from './components/CourseSelector/CourseSelector';\nimport SelectedCourses from './components/CourseSelector/SelectedCourses';\nimport Timetable from './components/Timetable/Timetable';\n\nfunction App() {\n  const [selectedCourses, setSelectedCourses] = useState([[],[],[]]);\n  const [sem, setSem] = useState(0); // 0: First Semester, 1: Second Semester, 2: Summer Semester\n  // useEffect(() => console.log(selectedCourses));\n  const fromTime = 8, toTime = 20;\n  return (\n    <div className=\"App\">\n      <SelectedCourses sem={sem} selectedCourses={selectedCourses} setSelectedCourses={setSelectedCourses} />\n      <Timetable fromTime={fromTime} toTime={toTime} sem={sem} selectedCourses={selectedCourses} />\n      <CourseSelector sem={sem} setSem={setSem} selectedCourses={selectedCourses} setSelectedCourses={setSelectedCourses} />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}